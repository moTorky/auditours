!function (e) { var t = (e.browser.msie ? "paste" : "input") + ".mask", n = null != window.orientation; e.mask = { definitions: { 9: "[0-9]", a: "[A-Za-z]", "*": "[A-Za-z0-9]" }, dataName: "rawMaskFn" }, e.fn.extend({ caret: function (e, t) { if (0 != this.length) { if ("number" == typeof e) return t = "number" == typeof t ? t : e, this.each(function () { if (this.setSelectionRange) this.setSelectionRange(e, t); else if (this.createTextRange) { var n = this.createTextRange(); n.collapse(!0), n.moveEnd("character", t), n.moveStart("character", e), n.select() } }); if (this[0].setSelectionRange) e = this[0].selectionStart, t = this[0].selectionEnd; else if (document.selection && document.selection.createRange) { var n = document.selection.createRange(); e = 0 - n.duplicate().moveStart("character", -1e5), t = e + n.text.length } return { begin: e, end: t } } }, unmask: function () { return this.trigger("unmask") }, mask: function (a, r) { if (!a && this.length > 0) return e(this[0]).data(e.mask.dataName)(); r = e.extend({ placeholder: "_", completed: null }, r); var i = e.mask.definitions, c = [], o = a.length, l = null, u = a.length; return e.each(a.split(""), function (e, t) { "?" == t ? (u-- , o = e) : i[t] ? (c.push(new RegExp(i[t])), null == l && (l = c.length - 1)) : c.push(null) }), this.trigger("unmask").each(function () { var s = e(this), f = e.map(a.split(""), function (e, t) { if ("?" != e) return i[e] ? r.placeholder : e }), h = s.val(); function d(e) { for (; ++e <= u && !c[e];); return e } function m(e, t) { if (!(e < 0)) { for (var n = e, a = d(t); n < u; n++)if (c[n]) { if (!(a < u && c[n].test(f[a]))) break; f[n] = f[a], f[a] = r.placeholder, a = d(a) } g(), s.caret(Math.max(l, e)) } } function v(e, t) { for (var n = e; n < t && n < u; n++)c[n] && (f[n] = r.placeholder) } function g() { return s.val(f.join("")).val() } function p(e) { for (var t = s.val(), n = -1, a = 0, i = 0; a < u; a++)if (c[a]) { for (f[a] = r.placeholder; i++ < t.length;) { var h = t.charAt(i - 1); if (c[a].test(h)) { f[a] = h, n = a; break } } if (i > t.length) break } else f[a] == t.charAt(i) && a != o && (i++ , n = a); return !e && n + 1 < o ? (s.val(""), v(0, u)) : (e || n + 1 >= o) && (g(), e || s.val(s.val().substring(0, n + 1))), o ? a : l } s.data(e.mask.dataName, function () { return e.map(f, function (e, t) { return c[t] && e != r.placeholder ? e : null }).join("") }), s.attr("readonly") || s.one("unmask", function () { s.unbind(".mask").removeData(e.mask.dataName) }).bind("focus.mask", function () { h = s.val(); var t = p(); g(); var n = function () { t == a.length ? s.caret(0, t) : s.caret(t) }; (e.browser.msie ? n : function () { setTimeout(n, 0) })() }).bind("blur.mask", function () { p(), s.val() != h && s.change() }).bind("keydown.mask", function (e) { var t = e.which; if (8 == t || 46 == t || n && 127 == t) { var a = s.caret(), r = a.begin, i = a.end; return i - r == 0 && (r = 46 != t ? function (e) { for (; --e >= 0 && !c[e];); return e }(r) : i = d(r - 1), i = 46 == t ? d(i) : i), v(r, i), m(r, i - 1), !1 } if (27 == t) return s.val(h), s.caret(0, p()), !1 }).bind("keypress.mask", function (e) { var t = e.which, n = s.caret(); if (e.ctrlKey || e.altKey || e.metaKey || t < 32) return !0; if (t) { n.end - n.begin != 0 && (v(n.begin, n.end), m(n.begin, n.end - 1)); var a = d(n.begin - 1); if (a < u) { var i = String.fromCharCode(t); if (c[a].test(i)) { !function (e) { for (var t = e, n = r.placeholder; t < u; t++)if (c[t]) { var a = d(t), i = f[t]; if (f[t] = n, !(a < u && c[a].test(i))) break; n = i } }(a), f[a] = i, g(); var o = d(a); s.caret(o), r.completed && o >= u && r.completed.call(s) } } return !1 } }).bind(t, function () { setTimeout(function () { s.caret(p(!0)) }, 0) }), p() }) } }) }(jQuery);