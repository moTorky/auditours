!function (e, a, t) { var l, r, o = "placeholder" in a.createElement("input"), d = "placeholder" in a.createElement("textarea"), c = t.fn, n = t.valHooks; function i(e, l) { var r, o = this, d = t(o); if (o.value == d.attr("placeholder") && d.hasClass("placeholder")) { if (r = o == a.activeElement, d.data("placeholder-password")) { if (d = d.hide().next().show().attr("id", d.removeAttr("id").data("placeholder-id")), !0 === e) return d[0].value = l; d.focus() } else o.value = "", d.removeClass("placeholder"); r && o.select() } } function h() { var e, a = this, l = t(a), r = this.id; if ("" == a.value) { if ("password" == a.type) { if (!l.data("placeholder-textinput")) { try { e = l.clone().attr({ type: "text" }) } catch (a) { e = t("<input>").attr(t.extend(function (e) { var a = {}, l = /^jQuery\d+$/; return t.each(e.attributes, function (e, t) { t.specified && !l.test(t.name) && (a[t.name] = t.value) }), a }(this), { type: "text" })) } e.removeAttr("name").data({ "placeholder-password": !0, "placeholder-id": r }).bind("focus.placeholder", i), l.data({ "placeholder-textinput": e, "placeholder-id": r }).before(e) } l = l.removeAttr("id").hide().prev().attr("id", r).show() } l.addClass("placeholder"), l[0].value = l.attr("placeholder") } else l.removeClass("placeholder") } o && d ? (r = c.placeholder = function () { return this }).input = r.textarea = !0 : ((r = c.placeholder = function () { return this.filter((o ? "textarea" : ":input") + "[placeholder]").not(".placeholder").bind({ "focus.placeholder": i, "blur.placeholder": h }).data("placeholder-enabled", !0).trigger("blur.placeholder"), this }).input = o, r.textarea = d, l = { get: function (e) { var a = t(e); return a.data("placeholder-enabled") && a.hasClass("placeholder") ? "" : e.value }, set: function (e, l) { var r = t(e); return r.data("placeholder-enabled") ? ("" == l ? (e.value = l, e != a.activeElement && h.call(e)) : r.hasClass("placeholder") && i.call(e, !0, l) || (e.value = l), r) : e.value = l } }, o || (n.input = l), d || (n.textarea = l), t(function () { t(a).delegate("form", "submit.placeholder", function () { var e = t(".placeholder", this).each(i); setTimeout(function () { e.each(h) }, 10) }) }), t(e).bind("beforeunload.placeholder", function () { t(".placeholder").each(function () { this.value = "" }) })) }(this, document, jQuery);