!function (a) { var e, t = a.validator, n = "unobtrusiveValidation"; function r(a, e, t) { a.rules[e] = t, a.message && (a.messages[e] = a.message) } function i(a) { return a.substr(0, a.lastIndexOf(".") + 1) } function d(a, e) { return 0 === a.indexOf("*.") && (a = a.replace("*.", e)), a } function o(e, t) { var n = a(this).find("[data-valmsg-for='" + t[0].name + "']"), r = !1 !== a.parseJSON(n.attr("data-valmsg-replace")); n.removeClass("field-validation-valid").addClass("field-validation-error"), e.data("unobtrusiveContainer", n), r ? (n.empty(), e.removeClass("input-validation-error").appendTo(n)) : e.hide() } function s(e, t) { var n = a(this).find("[data-valmsg-summary=true]"), r = n.find("ul"); r && r.length && t.errorList.length && (r.empty(), n.addClass("validation-summary-errors").removeClass("validation-summary-valid"), a.each(t.errorList, function () { a("<li />").html(this.message).appendTo(r) })) } function l(e) { var t = e.data("unobtrusiveContainer"), n = a.parseJSON(t.attr("data-valmsg-replace")); t && (t.addClass("field-validation-valid").removeClass("field-validation-error"), e.removeData("unobtrusiveContainer"), n && t.empty()) } function u(e) { var t = a(e), r = t.data(n); return r || (r = { options: { errorClass: "input-validation-error", errorElement: "span", errorPlacement: a.proxy(o, e), invalidHandler: a.proxy(s, e), messages: {}, rules: {}, success: a.proxy(l, e) }, attachValidation: function () { t.validate(this.options) }, validate: function () { return t.validate(), t.valid() } }, t.data(n, r)), r } t.unobtrusive = { adapters: [], parseElement: function (e, t) { var n, r, i, d = a(e), o = d.parents("form")[0]; o && ((n = u(o)).options.rules[e.name] = r = {}, n.options.messages[e.name] = i = {}, a.each(this.adapters, function () { var t = "data-val-" + this.name, n = d.attr(t), s = {}; void 0 !== n && (t += "-", a.each(this.params, function () { s[this] = d.attr(t + this) }), this.adapt({ element: e, form: o, message: n, params: s, rules: r, messages: i })) }), jQuery.extend(r, { __dummy__: !0 }), !t && n.attachValidation()) }, parse: function (e) { a(e).find(":input[data-val=true]").each(function () { t.unobtrusive.parseElement(this, !0) }), a("form").each(function () { var a = u(this); a && a.attachValidation() }) } }, (e = t.unobtrusive.adapters).add = function (a, e, t) { return t || (t = e, e = []), this.push({ name: a, params: e, adapt: t }), this }, e.addBool = function (a, e) { return this.add(a, function (t) { r(t, e || a, !0) }) }, e.addMinMax = function (a, e, t, n, i, d) { return this.add(a, [i || "min", d || "max"], function (a) { var i = a.params.min, d = a.params.max; i && d ? r(a, n, [i, d]) : i ? r(a, e, i) : d && r(a, t, d) }) }, e.addSingleVal = function (a, e, t) { return this.add(a, [e || "val"], function (n) { r(n, t || a, n.params[e]) }) }, t.addMethod("__dummy__", function () { return !0 }), t.addMethod("regex", function (a, e, t) { var n; return !!this.optional(e) || (n = new RegExp(t).exec(a)) && 0 === n.index && n[0].length === a.length }), e.addSingleVal("accept", "exts").addSingleVal("regex", "pattern"), e.addBool("creditcard").addBool("date").addBool("digits").addBool("email").addBool("number").addBool("url"), e.addMinMax("length", "minlength", "maxlength", "rangelength").addMinMax("range", "min", "max", "range"), e.add("equalto", ["other"], function (e) { var t = i(e.element.name), n = d(e.params.other, t); r(e, "equalTo", a(e.form).find(":input[name=" + n + "]")[0]) }), e.add("required", function (a) { ("INPUT" !== a.element.tagName.toUpperCase() || "CHECKBOX" !== a.element.type.toUpperCase()) && r(a, "required", !0) }), e.add("remote", ["url", "type", "additionalfields"], function (e) { var t = { url: e.params.url, type: e.params.type || "GET", data: {} }, n = i(e.element.name); a.each(function (a) { return a.replace(/^\s+|\s+$/g, "").split(/\s*,\s*/g) }(e.params.additionalfields || e.element.name), function (r, i) { var o = d(i, n); t.data[o] = function () { return a(e.form).find(":input[name='" + o + "']").val() } }), r(e, "remote", t) }), a(function () { t.unobtrusive.parse(document) }) }(jQuery);